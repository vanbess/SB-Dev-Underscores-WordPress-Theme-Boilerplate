"use strict";function _typeof(a){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}(function(a,b){"use strict";"function"==typeof define&&define.amd?define("cache",[],function(){return b}):"object"===("undefined"==typeof module?"undefined":_typeof(module))&&"object"===_typeof(module.exports)?module.exports=b:window.cache=b})(void 0,function(){"use strict";function _parseDateTo(date,to){if(date=(date+"").replace(/(-?\d+)/g," $1").replace(/\s+/g," ").trim(),/^-?\d+(y|M|w|d|h|m|s|ms)?( -?\d+(y|M|w|d|h|m|s|ms)?)*$/.test(date)){var years=date.match(/-?\d+y/g);date=date.replace(/-?\d+y/g,"");var months=date.match(/-?\d+M/g);date=date.replace(/-?\d+M/g,""),date=date.replace("w","*1000*60*60*24*7").replace("d","*1000*60*60*24").replace("h","*1000*60*60").replace(/ms/g,"").replace("m","*1000*60").replace("s","*1000"),date=new Date(Date.now()+(eval(date.replace(/\s+/,"+"))||0)),(years||[]).forEach(function(a){date.setFullYear(date.getFullYear()+parseInt(a))}),(months||[]).forEach(function(a){date.setMonth(date.getMonth()+parseInt(a))})}else date=new Date(date);if(isNaN(date.getTime()))return console.warn("\""+arguments[0]+"\" is an invalid date :/ Please see https://github.com/enoks/cache.js#setter for more information."),null;switch((to||"utc").toLowerCase()){case"time":case"timestamp":return date.getTime();default:case"utc":return date.toUTCString()}}var storages={},cache=function(){switch(arguments[0]=arguments[0]||"localStorage"){case"addStorage":return arguments[1]?storages[arguments[1]]?console.error("Storage \""+arguments[1]+"\" already exists."):(storages[arguments[1]]=arguments[2]||{},cache(arguments[1])):console.error("No storage name!? This can not work.");case"removeStorage":return delete storages[arguments[1]];default:storages[arguments[0]]||console.error("No \""+arguments[0]+"\" storage/cache available. Please choose \""+Object.keys(storages).join("\", \"")+"\".");var a=storages[arguments[0]]||{};return"[object Object]"!=Object.prototype.toString.call(a)&&(a={}),a.has||(a.has=function(b){return null!==a.get(b)}),a.is=function(b,c,d){return a.get(b,d)===c},a.set||(a.set=function(){return this}),a.get||(a.get=function(a,b){return"undefined"==typeof b?null:b}),a.remove||(a.remove=function(){return this}),a}};return cache("addStorage","localStorage",{set:function set(a,b,c){return this.remove(a),"undefined"!=typeof c&&(c=(c+"").trim())?localStorage.setItem(a,JSON.stringify({data:b,expires:_parseDateTo(c)})):sessionStorage.setItem(a,JSON.stringify(b)),this},get:function get(a,b){var c,d=sessionStorage.getItem(a);if(null!==d)try{c=JSON.parse(d),d=c}catch(a){}else{d=localStorage.getItem(a);try{c=JSON.parse(d),c.expires&&Date.now()>Date.parse(c.expires)?(this.remove(a),d=null):d="undefined"==typeof c.data?null:c.data}catch(a){}}return null==d?"undefined"==typeof b?null:b:d},remove:function remove(a){return sessionStorage.removeItem(a),localStorage.removeItem(a),this},has:function has(a){return localStorage.hasOwnProperty(a)&&!this.is(a,null)||sessionStorage.hasOwnProperty(a)}}),cache("addStorage","cookie",{set:function set(a,b,c){b=b||"","string"!=typeof b&&(b=JSON.stringify(b));var d=[a+"="+encodeURIComponent(b)];for(var e in"undefined"==typeof c&&(c={}),0<=["number","string"].indexOf(_typeof(c))&&(c={expires:c}),"undefined"==typeof c.expires||!(c.expires=(c.expires+"").trim())||(c.expires=_parseDateTo(c.expires),!c.expires&&delete c.expires),"string"!=typeof c.Path&&(c.Path="/"),c)c.hasOwnProperty(e)&&d.push(e+"="+c[e]);return document.cookie=d.join(";"),this},get:function get(a,b){var c;if(document.cookie.split(";").forEach(function(b){"undefined"==typeof c&&0==b.trim().indexOf(a+"=")&&(c=decodeURIComponent(b.replace(new RegExp("^\\s*"+a+"="),"")))}),"undefined"==typeof c)c="undefined"==typeof b?null:b;else try{JSON.parse(c),c=JSON.parse(c)}catch(a){}return c},remove:function remove(a){return this.set(a,null,"-1s"),this},has:function has(a){return new RegExp("(; ?)?"+a+"=").test(document.cookie)}}),cache}());